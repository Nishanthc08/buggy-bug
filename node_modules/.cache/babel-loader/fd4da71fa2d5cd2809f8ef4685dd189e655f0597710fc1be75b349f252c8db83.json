{"ast":null,"code":"var _jsxFileName = \"/home/boss/BugBounty/BuggyBug/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check for saved user session\n    const savedUser = localStorage.getItem('buggyBugUser');\n    if (savedUser) {\n      try {\n        setUser(JSON.parse(savedUser));\n      } catch (error) {\n        console.error('Error parsing saved user:', error);\n        localStorage.removeItem('buggyBugUser');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    // Simulate API call - In a real app, this would be an actual authentication service\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        // Simple validation for demo purposes\n        if (email && password.length >= 6) {\n          const userData = {\n            id: Date.now(),\n            email,\n            name: email.split('@')[0],\n            avatar: `https://ui-avatars.com/api/?name=${encodeURIComponent(email.split('@')[0])}&background=7c3aed&color=fff`,\n            joinDate: new Date().toISOString(),\n            notes: [],\n            bookmarks: [],\n            completedQuizzes: [],\n            preferences: {\n              emailNotifications: true,\n              publicProfile: true,\n              theme: 'dark'\n            }\n          };\n          setUser(userData);\n          localStorage.setItem('buggyBugUser', JSON.stringify(userData));\n          resolve(userData);\n        } else {\n          reject(new Error('Invalid email or password (password must be at least 6 characters)'));\n        }\n      }, 1000);\n    });\n  };\n  const register = async (email, password, name) => {\n    // Simulate API call\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (email && password.length >= 6 && name) {\n          const userData = {\n            id: Date.now(),\n            email,\n            name,\n            avatar: `https://ui-avatars.com/api/?name=${encodeURIComponent(name)}&background=7c3aed&color=fff`,\n            joinDate: new Date().toISOString(),\n            notes: [],\n            bookmarks: [],\n            completedQuizzes: [],\n            preferences: {\n              emailNotifications: true,\n              publicProfile: true,\n              theme: 'dark'\n            }\n          };\n          setUser(userData);\n          localStorage.setItem('buggyBugUser', JSON.stringify(userData));\n          resolve(userData);\n        } else {\n          reject(new Error('Please fill all fields (password must be at least 6 characters)'));\n        }\n      }, 1000);\n    });\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('buggyBugUser');\n  };\n  const updateUser = updatedData => {\n    const updatedUser = {\n      ...user,\n      ...updatedData\n    };\n    setUser(updatedUser);\n    localStorage.setItem('buggyBugUser', JSON.stringify(updatedUser));\n  };\n  const addNote = note => {\n    const newNote = {\n      id: Date.now(),\n      title: note.title,\n      content: note.content,\n      category: note.category || 'general',\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n    const updatedNotes = [...(user.notes || []), newNote];\n    updateUser({\n      notes: updatedNotes\n    });\n    return newNote;\n  };\n  const updateNote = (noteId, updatedNote) => {\n    const updatedNotes = user.notes.map(note => note.id === noteId ? {\n      ...note,\n      ...updatedNote,\n      updatedAt: new Date().toISOString()\n    } : note);\n    updateUser({\n      notes: updatedNotes\n    });\n  };\n  const deleteNote = noteId => {\n    const updatedNotes = user.notes.filter(note => note.id !== noteId);\n    updateUser({\n      notes: updatedNotes\n    });\n  };\n  const addBookmark = bookmark => {\n    const newBookmark = {\n      id: Date.now(),\n      title: bookmark.title,\n      url: bookmark.url,\n      category: bookmark.category || 'general',\n      createdAt: new Date().toISOString()\n    };\n    const updatedBookmarks = [...(user.bookmarks || []), newBookmark];\n    updateUser({\n      bookmarks: updatedBookmarks\n    });\n    return newBookmark;\n  };\n  const removeBookmark = bookmarkId => {\n    const updatedBookmarks = user.bookmarks.filter(bookmark => bookmark.id !== bookmarkId);\n    updateUser({\n      bookmarks: updatedBookmarks\n    });\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser,\n    addNote,\n    updateNote,\n    deleteNote,\n    addBookmark,\n    removeBookmark\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","savedUser","localStorage","getItem","JSON","parse","error","console","removeItem","login","email","password","Promise","resolve","reject","setTimeout","length","userData","id","Date","now","name","split","avatar","encodeURIComponent","joinDate","toISOString","notes","bookmarks","completedQuizzes","preferences","emailNotifications","publicProfile","theme","setItem","stringify","register","logout","updateUser","updatedData","updatedUser","addNote","note","newNote","title","content","category","createdAt","updatedAt","updatedNotes","updateNote","noteId","updatedNote","map","deleteNote","filter","addBookmark","bookmark","newBookmark","url","updatedBookmarks","removeBookmark","bookmarkId","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/boss/BugBounty/BuggyBug/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for saved user session\n    const savedUser = localStorage.getItem('buggyBugUser');\n    if (savedUser) {\n      try {\n        setUser(JSON.parse(savedUser));\n      } catch (error) {\n        console.error('Error parsing saved user:', error);\n        localStorage.removeItem('buggyBugUser');\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (email, password) => {\n    // Simulate API call - In a real app, this would be an actual authentication service\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        // Simple validation for demo purposes\n        if (email && password.length >= 6) {\n          const userData = {\n            id: Date.now(),\n            email,\n            name: email.split('@')[0],\n            avatar: `https://ui-avatars.com/api/?name=${encodeURIComponent(email.split('@')[0])}&background=7c3aed&color=fff`,\n            joinDate: new Date().toISOString(),\n            notes: [],\n            bookmarks: [],\n            completedQuizzes: [],\n            preferences: {\n              emailNotifications: true,\n              publicProfile: true,\n              theme: 'dark'\n            }\n          };\n          \n          setUser(userData);\n          localStorage.setItem('buggyBugUser', JSON.stringify(userData));\n          resolve(userData);\n        } else {\n          reject(new Error('Invalid email or password (password must be at least 6 characters)'));\n        }\n      }, 1000);\n    });\n  };\n\n  const register = async (email, password, name) => {\n    // Simulate API call\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (email && password.length >= 6 && name) {\n          const userData = {\n            id: Date.now(),\n            email,\n            name,\n            avatar: `https://ui-avatars.com/api/?name=${encodeURIComponent(name)}&background=7c3aed&color=fff`,\n            joinDate: new Date().toISOString(),\n            notes: [],\n            bookmarks: [],\n            completedQuizzes: [],\n            preferences: {\n              emailNotifications: true,\n              publicProfile: true,\n              theme: 'dark'\n            }\n          };\n          \n          setUser(userData);\n          localStorage.setItem('buggyBugUser', JSON.stringify(userData));\n          resolve(userData);\n        } else {\n          reject(new Error('Please fill all fields (password must be at least 6 characters)'));\n        }\n      }, 1000);\n    });\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('buggyBugUser');\n  };\n\n  const updateUser = (updatedData) => {\n    const updatedUser = { ...user, ...updatedData };\n    setUser(updatedUser);\n    localStorage.setItem('buggyBugUser', JSON.stringify(updatedUser));\n  };\n\n  const addNote = (note) => {\n    const newNote = {\n      id: Date.now(),\n      title: note.title,\n      content: note.content,\n      category: note.category || 'general',\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n    \n    const updatedNotes = [...(user.notes || []), newNote];\n    updateUser({ notes: updatedNotes });\n    return newNote;\n  };\n\n  const updateNote = (noteId, updatedNote) => {\n    const updatedNotes = user.notes.map(note => \n      note.id === noteId \n        ? { ...note, ...updatedNote, updatedAt: new Date().toISOString() }\n        : note\n    );\n    updateUser({ notes: updatedNotes });\n  };\n\n  const deleteNote = (noteId) => {\n    const updatedNotes = user.notes.filter(note => note.id !== noteId);\n    updateUser({ notes: updatedNotes });\n  };\n\n  const addBookmark = (bookmark) => {\n    const newBookmark = {\n      id: Date.now(),\n      title: bookmark.title,\n      url: bookmark.url,\n      category: bookmark.category || 'general',\n      createdAt: new Date().toISOString()\n    };\n    \n    const updatedBookmarks = [...(user.bookmarks || []), newBookmark];\n    updateUser({ bookmarks: updatedBookmarks });\n    return newBookmark;\n  };\n\n  const removeBookmark = (bookmarkId) => {\n    const updatedBookmarks = user.bookmarks.filter(bookmark => bookmark.id !== bookmarkId);\n    updateUser({ bookmarks: updatedBookmarks });\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser,\n    addNote,\n    updateNote,\n    deleteNote,\n    addBookmark,\n    removeBookmark\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}